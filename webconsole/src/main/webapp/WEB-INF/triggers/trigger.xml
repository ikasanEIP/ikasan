<?xml version="1.0" encoding="UTF-8"?>
<!-- 
# //
# //
# // $Id$
# // $URL$
# // 
# // ====================================================================
# // Ikasan Enterprise Integration Platform
# // Copyright (c) 2003-2008 Mizuho International plc. and individual contributors as indicated
# // by the @authors tag. See the copyright.txt in the distribution for a
# // full listing of individual contributors.
# //
# // This is free software; you can redistribute it and/or modify it
# // under the terms of the GNU Lesser General Public License as
# // published by the Free Software Foundation; either version 2.1 of
# // the License, or (at your option) any later version.
# //
# // This software is distributed in the hope that it will be useful,
# // but WITHOUT ANY WARRANTY; without even the implied warranty of
# // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# // Lesser General Public License for more details.
# //
# // You should have received a copy of the GNU Lesser General Public
# // License along with this software; if not, write to the 
# // Free Software Foundation Europe e.V. Talstrasse 110, 40217 Dusseldorf, Germany 
# // or see the FSF site: http://www.fsfeurope.org/.
# // ====================================================================
# //
# // Author:  Ikasan Development Team
# // 
-->
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    
    <input name="moduleName" required="true" />
    <input name="flowName" required="true" />
    <input name="flowElementName" />
    <input name="relationship" />
    
    <on-start>
		<evaluate expression="triggerDetailsService.createTriggerDetails(moduleName, flowName, flowElementName, relationship)" result="flowScope.triggerDetails" />
		<evaluate expression="triggerDetailsService.getFlowElementNames(moduleName, flowName)" result="flowScope.flowElementNames" />
		<evaluate expression="triggerDetailsService.getJobNames()" result="flowScope.registeredJobs" />
		<evaluate expression="triggerDetailsService.getRelationships()" result="flowScope.relationships" />
	</on-start>
    
    <view-state id="specifyJob" model="triggerDetails">
        <transition on="submit" to="specifyParameters" >
        	<evaluate expression="triggerDetailsService.getParameterNames(currentEvent.attributes.jobName)" result="flowScope.triggerParameterNames"/>
        </transition>
        <transition on="cancel" to="triggerCancelled" />
    </view-state>
    
    <view-state id="specifyParameters" model="triggerDetails">
        <transition on="createTrigger" to="createTrigger" />
        <transition on="changeJob" to="specifyJob" >
         	<evaluate expression="flowScope.triggerDetails.params.clear()" />
        </transition>
        <transition on="cancel" to="triggerCancelled" />
    </view-state>
	
    
    <action-state id="createTrigger">
        <evaluate expression="triggerDetailsService.createTrigger(flowScope.triggerDetails, flowRequestContext)" />
        <transition on="success" to="triggerConfirmed" />
        <transition on="error" to="specifyParameters" />
    </action-state>
    
	
    <end-state id="triggerConfirmed"  view="externalRedirect:contextRelative:/modules/viewFlowElement.htm?moduleName=${flowScope.triggerDetails.moduleName}&amp;flowName=${flowScope.triggerDetails.flowName}&amp;flowElementName=${flowScope.triggerDetails.flowElementName}" />
    <end-state id="triggerCancelled" view="externalRedirect:contextRelative:/modules/viewFlowElement.htm?moduleName=${flowScope.triggerDetails.moduleName}&amp;flowName=${flowScope.triggerDetails.flowName}&amp;flowElementName=${flowScope.triggerDetails.flowElementName}" />

</flow>
