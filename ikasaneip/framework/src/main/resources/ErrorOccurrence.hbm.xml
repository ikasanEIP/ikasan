<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
# //
# //
# // $Id$
# // $URL$
# // 
# // ====================================================================
# // Ikasan Enterprise Integration Platform
# // 
# // Distributed under the Modified BSD License.
# // Copyright notice: The copyright for this software and a full listing 
# // of individual contributors are as shown in the packaged copyright.txt 
# // file. 
# // 
# // All rights reserved.
# //
# // Redistribution and use in source and binary forms, with or without 
# // modification, are permitted provided that the following conditions are met:
# //
# //  - Redistributions of source code must retain the above copyright notice, 
# //    this list of conditions and the following disclaimer.
# //
# //  - Redistributions in binary form must reproduce the above copyright notice, 
# //    this list of conditions and the following disclaimer in the documentation 
# //    and/or other materials provided with the distribution.
# //
# //  - Neither the name of the ORGANIZATION nor the names of its contributors may
# //    be used to endorse or promote products derived from this software without 
# //    specific prior written permission.
# //
# // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
# // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
# // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
# // USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# // ====================================================================
# //
# // Author:  Ikasan Development Team
# // 
-->
<!--  
    This is the hibernate mapping configuration for ErrorOccurrence persistence.
    @author Ikasan Development Team 
 -->
<hibernate-mapping default-access="field">
	 
	<class
		name="org.ikasan.framework.error.model.ErrorOccurrence"
		table="ErrorOccurrence">

        <id name="id" type="java.lang.Long" column="Id">
            <generator class="identity" />
        </id>

		
        <property name="moduleName"        type="java.lang.String" 
                  column="ModuleName"      not-null="true" />
        <property name="flowName"          type="java.lang.String" 
                  column="FlowName"        />
        <property name="initiatorName"          type="java.lang.String" 
                  column="InitiatorName"        />
        <property name="flowElementName"   type="java.lang.String" 
                  column="FlowElementName" />
        <property name="eventId"           type="java.lang.String" 
                  column="EventId"         />
        <property name="url"      type="java.lang.String" 
                  column="Url"    />
        <property name="actionTaken"      type="java.lang.String" 
                  column="ActionTaken"    />
        <property name="errorDetail"    type="java.lang.String" 
                  column="ErrorDetail "    not-null="true" />
        <property name="logTime"           type="java.util.Date" 
                  column="LogTime" not-null="true" />
        <property name="expiry"           type="java.util.Date" 
                  column="Expiry" />
        <many-to-one name="errorEvent" class="org.ikasan.framework.component.Event" cascade="all" lazy="false" column="ErrorEventId" unique="true"/>
        <!-- <one-to-one name="errorEvent" 
        			class="org.ikasan.framework.component.Event" cascade="all" lazy="false" />-->
	</class>
	
	<class name="org.ikasan.framework.component.Event" table="ErrorEvent">
		<id name="persistenceId" type="long" column="PersistenceId">
			<generator class="identity" />
		</id>
		<property name="id" column="EventId" not-null="true"/>
		<property name="priority" column="Priority" not-null="true"/>
		<property name="timestamp" column="Timestamp" not-null="true"/>
		
		<!--
			Use a standard parent/child relationship for payloads, this a
			persistent list
		-->
		<list name="payloads" cascade="all" lazy="false">
			<key not-null="true"> <!-- NOT NULL has to be here! -->
				<column name="EventId" />
			</key>
			<list-index column="PayloadPosition"/>
			<one-to-many class="org.ikasan.common.component.DefaultPayload" />
		</list>
	</class>
	
	<class name="org.ikasan.common.component.DefaultPayload" table="ErrorPayload">
		<id name="persistenceId" type="long" column="PersistenceId">
			<generator class="identity" />
		</id>
		<property name="id" column="PayloadId" />
		<property name="content" column="Content" />
		<map name="attributes" table="ErrorPayloadAttribute" cascade="all"
			lazy="false">
			<key column="ErrorPayloadId" />
			<index column="AttributeName" type="java.lang.String" />
			<element column="AttributeValue" type="java.lang.String" />
		</map>
	</class>
	
</hibernate-mapping>
