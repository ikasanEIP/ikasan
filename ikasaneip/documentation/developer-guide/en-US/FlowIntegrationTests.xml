<?xml version="1.0" encoding="UTF-8"?>
<!-- 

 ====================================================================
 Ikasan Enterprise Integration Platform
 
 Distributed under the Modified BSD License.
 Copyright notice: The copyright for this software and a full listing 
 of individual contributors are as shown in the packaged copyright.txt 
 file. 
 
 All rights reserved.

 Redistribution and use in source and binary forms, with or without 
 modification, are permitted provided that the following conditions are met:

  - Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright notice, 
    this list of conditions and the following disclaimer in the documentation 
    and/or other materials provided with the distribution.

  - Neither the name of the ORGANIZATION nor the names of its contributors may
    be used to endorse or promote products derived from this software without 
    specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ====================================================================

-->
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="FlowIntegrationTests" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Flow Integration Tests</title>

  <section>
    <title>Introduction</title>

    <para>You begin by creating a FlowTest.java file under
    projectName/jar/test/src/java/</para>
  </section>

  <section>
    <title>Maven test goal alteration</title>

    <para>In the projectName/jar/pom.xml file you will notice a section: TODO
    This configuration of the TODO plugin, ensures that the flow integration
    tests are run after the <emphasis>Components</emphasis> are built and
    tested. Check to make sure that this configruation is in place for your
    <emphasis>Module</emphasis>.</para>
  </section>

  <section>
    <title><filename>&lt;FlowName&gt;IntegrationTest</filename></title>

    <para>
        Each Flow is tested in its own class with the naming convention of
        <filename>&lt;FlowName&gt;IntegrationTest</filename>. 
        This class will sit in
        the <filename>&lt;your domain suffix&gt;.&lt;your
        organisation name&gt;.&lt;your project
        name&gt;.integrationtest</filename> package.
    </para>
    
    <para>
        For example, the Pricing Service we have a
        <filename>TODOIntegrationTest</filename> class in the 
        <filename>org.ikasan.forexApp.integrationtest</filename>
        package.
    </para>
    
    <section>
    <title>The bare minimum test class</title>
    <para>This section shows the minimum you need to configure to start writing an 
    integration test for Ikasan flow.</para>
    <para>

<programlisting language="java">package org.ikasan.demo.forex.priceSrc.integrationtest;

import javax.annotation.Resource;
import javax.resource.ResourceException;

import org.ikasan.framework.component.Event;
import org.ikasan.framework.component.endpoint.Endpoint;
import org.ikasan.framework.flow.Flow;
import org.ikasan.framework.flow.invoker.FlowInvocationContext;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

/**
 * This is a test for <code>getPricesFlow</code>. This flow will
 * consume price files from configured endpoint and simply publish consumed
 * price to a local data store; in this case the data store is JMS with 
 * database-persistence
 * 
 * @author Ikasan Developer Team
 *
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations=
{
    "/module-flow-config.xml",
    "/module-service-config.xml",
    "/module-component-config.xml",
    "/module-expcetion-config.xml",
    "/hsql-config.xml",
    "/mock-beans.xml",
    "/substitute-beans.xml"
})
public class GetPricesFlowIntegrationTest
{
    /** The flow being tested */
    private @Resource Flow getPricesFlow;
    
    /**
     * Test case
     * The <code>getPricesFlow</code> is invoked with an event. The first flow element,
     * is the consumer {@link Endpoint} which does nothing to the event, but pass it along to
     * next flow element transition that in turn publishes the price event to
     * a JMS endpoint
     * @throws ResourceException if error getting events from underlying tech
     */
    @Test public void invoking_getPricesFlow_with_priceEvent_that_gets_published_to_local_endpoint() throws ResourceException
    {
        final Event dummyPriceEvent = null;//TODO create event from stored data sample;
        
        this.getPricesFlow.invoke(new FlowInvocationContext(), dummyPriceEvent);
    }
}</programlisting>
    
    
    </para>
    </section>
    
    
  </section>
</chapter>
