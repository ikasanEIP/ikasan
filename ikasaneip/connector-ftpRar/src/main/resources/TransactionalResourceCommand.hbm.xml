<?xml version="1.0"?>
<!-- 
# //
# //
# // $Id$
# // $URL$
# // 
# // ====================================================================
# // Ikasan Enterprise Integration Platform
# // Copyright (c) 2003-2008 Mizuho International plc. and individual contributors as indicated
# // by the @authors tag. See the copyright.txt in the distribution for a
# // full listing of individual contributors.
# //
# // This is free software; you can redistribute it and/or modify it
# // under the terms of the GNU Lesser General Public License as
# // published by the Free Software Foundation; either version 2.1 of
# // the License, or (at your option) any later version.
# //
# // This software is distributed in the hope that it will be useful,
# // but WITHOUT ANY WARRANTY; without even the implied warranty of
# // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# // Lesser General Public License for more details.
# //
# // You should have received a copy of the GNU Lesser General Public
# // License along with this software; if not, write to the 
# // Free Software Foundation Europe e.V. Talstrasse 110, 40217 Dusseldorf, Germany 
# // or see the FSF site: http://www.fsfeurope.org/.
# // ====================================================================
# //
# // Author:  Ikasan Development Team
# // 
-->
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

  <class name="org.ikasan.connector.base.command.AbstractTransactionalResourceCommand"
    table="TransactionalResourceCommand" discriminator-value="type">

    <id name="id" type="long" column="Id">
      <generator class="identity" />
    </id>

    <discriminator column="Type" type= "java.lang.String"/>

	<!-- common fields -->
    <property name="state" type="java.lang.String" column="State" not-null="true" />

    <many-to-one name="xid" column="Xid_Id" class="org.ikasan.connector.base.command.XidImpl"/>

    <property name="executionTimestamp" type="java.lang.String" column="ExecutionTimestamp" not-null="false" />

    <!-- subclasses without extra fields -->
	<subclass name="org.ikasan.connector.basefiletransfer.outbound.command.FileDiscoveryCommand" discriminator-value="FileDiscovery" />
    <subclass name="org.ikasan.connector.basefiletransfer.outbound.command.ChecksumDeliveredCommand" discriminator-value="ChecksumDelivered" />

    <!-- subclasses with extra fields -->
    <subclass name="org.ikasan.connector.basefiletransfer.outbound.command.ChecksumValidatorCommand" discriminator-value="ChecksumValidator">
        <join table="ChecksumCommand">
            <key column="Id"/>
            <property name="destructive" type="boolean" column="Destructive" not-null="false" />
            <property name="checksumFilePath" type="java.lang.String" column="ChecksumFilePath" not-null="false" />
        </join>
    </subclass>

	<subclass name="org.ikasan.connector.basefiletransfer.outbound.command.RetrieveFileCommand" discriminator-value="RetrieveFile" >
	    <join table="RetrieveFileCommand">
	        <key column="Id"/>
	        <property name="sourcePath" type="java.lang.String" column="SourcePath" not-null="false" />
            <property name="renameOnSuccess" type="boolean" column="RenameOnSuccess" not-null="false" />
            <property name="renameExtension" type="java.lang.String" column="RenameExtension" not-null="false" />
            <property name="moveOnSuccess" type="boolean" column="MoveOnSuccess" not-null="false" />
            <property name="moveNewPath" type="java.lang.String" column="MoveNewPath" not-null="false" />
            <property name="destructive" type="boolean" column="Destructive" not-null="false" />
	    </join>
	</subclass>

	<subclass name="org.ikasan.connector.basefiletransfer.outbound.command.ChunkingRetrieveFileCommand" discriminator-value="ChunkingRetrieveFile" >
	    <join table="RetrieveFileCommand">
	        <key column="Id"/>
	        <property name="sourcePath" type="java.lang.String" column="SourcePath" not-null="false" />
            <property name="renameOnSuccess" type="boolean" column="RenameOnSuccess" not-null="false" />
            <property name="renameExtension" type="java.lang.String" column="RenameExtension" not-null="false" />
            <property name="moveOnSuccess" type="boolean" column="MoveOnSuccess" not-null="false" />
            <property name="moveNewPath" type="java.lang.String" column="MoveNewPath" not-null="false" />
            <property name="destructive" type="boolean" column="Destructive" not-null="false" />
	    </join>
	</subclass>

    <subclass name="org.ikasan.connector.basefiletransfer.outbound.command.DeliverFileCommand" discriminator-value="DeliverFile" >
	    <join table="DeliverFileCommand">
	        <key column="Id"/>
	        <property name="fileName" type="java.lang.String" column="FileName" not-null="false" />
	        <property name="tempFileName" type="java.lang.String" column="TempFileName" not-null="false" />
            <property name="outputDirectory" type="java.lang.String" column="OutputDirectory" not-null="false" />
	        <property name="overwriteExisting" type="boolean" column="OverwriteExisting" not-null="false" />
            <property name="putAttempted" type="boolean" column="PutAttempted" not-null="false" />
	    </join>
	</subclass>

	<subclass name="org.ikasan.connector.basefiletransfer.outbound.command.DeliverBatchCommand" discriminator-value="DeliverBatch" >
	    <join table="DeliverBatchCommand">
	        <key column="Id"/>
	        <property name="outputDirectory" type="java.lang.String" column="OutputDirectory" not-null="false" />
	        <property name="tempDirectory" type="java.lang.String" column="TempDirectory" not-null="false" />
	        <property name="batchFolder" type="java.lang.String" column="BatchFolder" not-null="false" />
            <property name="putAttempted" type="boolean" column="PutAttempted" not-null="false" />
	    </join>
	</subclass>

	<subclass name="org.ikasan.connector.basefiletransfer.outbound.command.CleanupChunksCommand" discriminator-value="CleanupChunks" >
	    <join table="CleanupChunksCommand">
	        <key column="Id"/>
	        <property name="fileChunkHeaderId" type="java.lang.Long" column="FileChunkHeaderId" not-null="false" />
	    </join>
	</subclass>

  </class>

</hibernate-mapping>
