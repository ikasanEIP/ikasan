<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


    <bean id="mappingConfigurationSearchPanel" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.MappingConfigurationSearchPanel" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="clientComboBox"/>
        <constructor-arg ref="typeComboBox"/>
        <constructor-arg ref="sourceContextComboBox"/>
        <constructor-arg ref="targetContextComboBox"/>
        <constructor-arg ref="searchButtonClickListener"/>
        <constructor-arg ref="newActions"/>
    </bean>

	<bean id="mappingNavigatorBean" class="org.ikasan.dashboard.ui.framework.navigation.IkasanUINavigator" scope="session">
		<constructor-arg value="mapping"/>
        <constructor-arg>
            <list>
            	<bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value=""/>
                   <constructor-arg ref="emptyPanel"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="emptyPanel"/>
                   <constructor-arg ref="emptyPanel"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="searchResultsPanel"/>
                   <constructor-arg ref="mappingConfigurationSearchResultsPanel"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                    <constructor-arg value="mappingView"/>
                    <constructor-arg ref="mappingConfigurationSearchResultsPanel"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="existingMappingConfigurationPanel"/>
                   <constructor-arg ref="existingMappingConfigurationPanel"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="newClientWindow"/>
                   <constructor-arg ref="newClientWindow"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="newContextWindow"/>
                   <constructor-arg ref="newContextWindow"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="newConfigurationTypeWindow"/>
                   <constructor-arg ref="newConfigurationTypeWindow"/>
                </bean>
                <bean class="org.ikasan.dashboard.ui.framework.display.IkasanUIView" scope="session">
                   <constructor-arg value="newMappingConfigurationPanel"/>
                   <constructor-arg ref="newMappingConfigurationPanel"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg ref="mappingViewComponentContainer"/>
    </bean>
    
    <!-- Very Important: We need to use this proxy bean to avoid a circular dependency!! -->
    <bean id="mappingNavigator" class="org.springframework.aop.framework.ProxyFactoryBean" scope="session">
      <property name="targetSource">
        <bean class="org.springframework.aop.target.LazyInitTargetSource">
          <property name="targetBeanName"><idref bean="mappingNavigatorBean"/></property>
        </bean>
      </property>
    </bean>

	<bean id="mappingViewComponentContainer" class="org.ikasan.dashboard.ui.framework.display.ViewComponentContainer" scope="session">
    	<constructor-arg value="false"/>
    </bean>

    <bean id="emptyPanel" class="com.vaadin.navigator.Navigator.EmptyView" scope="session">
    </bean>

    <bean id="saveRequiredMonitor" class="org.ikasan.dashboard.ui.framework.util.SaveRequiredMonitor" scope="session">
        <constructor-arg ref="existingMappingConfigurationFunctionalGroup"/>
    </bean>

    <bean id="newActions" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.NewActions" scope="session">
        <constructor-arg ref="existingMappingConfigurationPanel"/>
        <constructor-arg ref="typeComboBoxRefreshGroup"/>
        <constructor-arg ref="clientComboBoxRefreshGroup"/>
        <constructor-arg ref="contextComboBoxRefreshGroup"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="newClientButton"/>
        <constructor-arg ref="newContextButton"/>
        <constructor-arg ref="newTypeButton"/>
        <constructor-arg ref="newMappingConfigurationButton"/>
        <constructor-arg ref="importMappingConfigurationButton"/>
        <constructor-arg ref="newClientLabel"/>
        <constructor-arg ref="newContextLabel"/>
        <constructor-arg ref="newTypeLabel"/>
        <constructor-arg ref="actionsLabel"/>
        <constructor-arg ref="newMappingConfigurationLabel"/>
        <constructor-arg ref="importMappingConfigurationLabel"/>
        <constructor-arg ref="mappingConfigurationImportWindow"/>
        <constructor-arg ref="mappingNavigator"/>
        <constructor-arg ref="newClientWindow"/>
        <constructor-arg ref="newContextWindow"/>
        <constructor-arg ref="newConfigurationTypeWindow"/>
    </bean>

    <bean id="mappingConfigurationImportWindow" class="org.ikasan.dashboard.ui.mappingconfiguration.window.MappingConfigurationImportWindow" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="mappingConfigurationConfigurationValuesTable"/>
        <constructor-arg ref="existingMappingConfigurationPanel"/>
        <constructor-arg ref="systemEventService"/>
        <constructor-arg ref="mappingNavigator"/>
    </bean>

    <bean id="newConfigurationTypeWindow" class="org.ikasan.dashboard.ui.mappingconfiguration.window.NewMappingConfigurationTypeWindow" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="typeComboBoxRefreshGroup"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="systemEventService"/>
    </bean>

    <bean id="newClientWindow" class="org.ikasan.dashboard.ui.mappingconfiguration.window.NewClientWindow" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="clientComboBoxRefreshGroup"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="systemEventService"/>
    </bean>

    <bean id="newContextWindow" class="org.ikasan.dashboard.ui.mappingconfiguration.window.NewMappingConfigurationContextWindow" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="contextComboBoxRefreshGroup"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="systemEventService"/>
    </bean>

    <bean id="existingMappingConfigurationPanel" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.ExistingMappingConfigurationPanel" scope="session">
        <constructor-arg ref="mappingConfigurationConfigurationValuesTable"/>
        <constructor-arg ref="existingMappingConfigurationClientComboBox"/>
        <constructor-arg ref="existingMappingConfigurationTypeComboBox"/>
        <constructor-arg ref="existingMappingConfigurationSourceContextComboBox"/>
        <constructor-arg ref="existingMappingConfigurationTargetContextComboBox"/>
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="existingMappingConfigurationEditButton"/>
        <constructor-arg ref="existingMappingConfigurationSaveButton"/>
        <constructor-arg ref="existingMappingConfigurationValueNewRecordButton"/>
        <constructor-arg ref="existingMappingConfigurationValueDeleteAllButton"/>
        <constructor-arg ref="existingMappingConfigurationValueImportButton"/>
        <constructor-arg ref="existingMappingConfigurationValueExportButton"/>
        <constructor-arg ref="existingMappingConfigurationExportButton"/>
        <constructor-arg ref="existingMappingConfigurationCancelButton"/>
        <constructor-arg ref="existingMappingConfigurationFunctionalGroup"/>
        <constructor-arg ref="mappingConfigurationExportHelper"/>
        <constructor-arg ref="mappingConfigurationValuesExportHelper"/>
        <constructor-arg ref="systemEventService"/>
        <constructor-arg ref="topLevelNavigator"/>
        <constructor-arg ref="mappingNavigator"/>
        <constructor-arg ref="menuLayout"/>
        <constructor-arg ref="configurationService"/>
        <constructor-arg ref="platformConfigurationService"/>
    </bean>

    <bean id="newMappingConfigurationPanel" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.NewMappingConfigurationPanel" scope="session">
        <constructor-arg ref="newMappingConfigurationConfigurationValuesTable"/>
        <constructor-arg ref="newMappingConfigurationClientComboBox"/>
        <constructor-arg ref="newMappingConfigurationTypeComboBox"/>
        <constructor-arg ref="newMappingConfigurationSourceContextComboBox"/>
        <constructor-arg ref="newMappingConfigurationTargetContextComboBox"/>
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="newMappingConfigurationEditButton"/>
        <constructor-arg ref="newMappingConfigurationSaveButton"/>
        <constructor-arg ref="newMappingConfigurationValueNewRecordButton"/>
        <constructor-arg ref="newMappingConfigurationValueDeleteAllButton"/>
        <constructor-arg ref="newMappingConfigurationValueImportButton"/>
        <constructor-arg ref="newMappingConfigurationValueExportButton"/>
        <constructor-arg ref="newMappingConfigurationExportButton"/>
        <constructor-arg ref="newMappingConfigurationCancelButton"/>
        <constructor-arg ref="newMappingConfigurationFunctionalGroup"/>
        <constructor-arg ref="mappingConfigurationExportHelper"/>
        <constructor-arg ref="mappingConfigurationValuesExportHelper"/>
        <constructor-arg ref="systemEventService"/>
        <constructor-arg ref="topLevelNavigator"/>
        <constructor-arg ref="mappingNavigator"/>
        <constructor-arg ref="menuLayout"/>
        <constructor-arg ref="configurationService"/>
        <constructor-arg ref="platformConfigurationService"/>
    </bean>

    <bean id="mappingConfigurationExportHelper" class="org.ikasan.dashboard.ui.mappingconfiguration.util.MappingConfigurationExportHelper" scope="session">
        <constructor-arg ref="mappingConfigurationValuesExportHelper"/>
    </bean>

    <bean id="mappingConfigurationValuesExportHelper" class="org.ikasan.dashboard.ui.mappingconfiguration.util.MappingConfigurationValuesExportHelper" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="mappingView" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.MappingConfigurationView" scope="session">
        <constructor-arg ref="mappingConfigurationSearchPanel"/>
        <constructor-arg ref="mappingConfigurationSearchResultsPanel"/>
        <constructor-arg ref="mappingViewComponentContainer"/>
    </bean>



    <bean id="searchResultsTable" class="org.ikasan.dashboard.ui.mappingconfiguration.component.MappingConfigurationSearchResultsTable" scope="session">
        <constructor-arg ref="searchResultTableItemClickListener"/>
    </bean>

    <bean id="mappingConfigurationConfigurationValuesTable" class="org.ikasan.dashboard.ui.mappingconfiguration.component.MappingConfigurationConfigurationValuesTable" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="adminUserVisibilityGroup"/>
        <constructor-arg ref="systemEventService"/>
    </bean>

    <bean id="newMappingConfigurationConfigurationValuesTable" class="org.ikasan.dashboard.ui.mappingconfiguration.component.MappingConfigurationConfigurationValuesTable" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="adminUserVisibilityGroup"/>
        <constructor-arg ref="systemEventService"/>
    </bean>

    <bean id="mappingConfigurationSearchResultsPanel" class="org.ikasan.dashboard.ui.mappingconfiguration.panel.MappingConfigurationSearchResultsPanel" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="searchResultsTable"/>
    </bean>

    <bean id="newMappingConfigurationFunctionalGroup" class="org.ikasan.dashboard.ui.framework.group.FunctionalGroup" scope="session">
        <constructor-arg ref="newMappingConfigurationEditButton"/>
        <constructor-arg ref="newMappingConfigurationSaveButton"/>
        <constructor-arg ref="newMappingConfigurationCancelButton"/>
    </bean>

    <bean id="existingMappingConfigurationFunctionalGroup" class="org.ikasan.dashboard.ui.framework.group.FunctionalGroup" scope="session">
        <constructor-arg ref="existingMappingConfigurationEditButton"/>
        <constructor-arg ref="existingMappingConfigurationSaveButton"/>
        <constructor-arg ref="existingMappingConfigurationCancelButton"/>
    </bean>

    <bean id="clientComboBoxRefreshGroup" class="org.ikasan.dashboard.ui.framework.group.RefreshGroup" scope="session">
        <property name="refreshableItems">
            <list>
                <ref bean="clientComboBox" />
                <ref bean="existingMappingConfigurationClientComboBox" />
                <ref bean="newMappingConfigurationClientComboBox" />
            </list>
        </property>
    </bean>

    <bean id="typeComboBoxRefreshGroup" class="org.ikasan.dashboard.ui.framework.group.RefreshGroup" scope="session">
        <property name="refreshableItems">
            <list>
                <ref bean="typeComboBox" />
                <ref bean="existingMappingConfigurationTypeComboBox" />
                <ref bean="newMappingConfigurationTypeComboBox" />
            </list>
        </property>
    </bean>

    <bean id="contextComboBoxRefreshGroup" class="org.ikasan.dashboard.ui.framework.group.RefreshGroup" scope="session">
        <property name="refreshableItems">
            <list>
                <ref bean="sourceContextComboBox" />
                <ref bean="targetContextComboBox" />
                <ref bean="existingMappingConfigurationSourceContextComboBox" />
                <ref bean="existingMappingConfigurationTargetContextComboBox" />
                <ref bean="newMappingConfigurationSourceContextComboBox" />
                <ref bean="newMappingConfigurationTargetContextComboBox" />
            </list>
        </property>
    </bean>

    <bean id="editableGroup" class="org.ikasan.dashboard.ui.framework.group.EditableGroup" scope="session">
        <property name="editables">
            <list>
                <ref bean="newMappingConfigurationPanel" />
                <ref bean="existingMappingConfigurationPanel" />
            </list>
        </property>
    </bean>

    <bean id="clientComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.ClientComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="typeComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TypeComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="sourceContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.SourceContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="true"/>
    </bean>

    <bean id="targetContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TargetContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="true"/>
    </bean>

    <bean id="existingMappingConfigurationClientComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.ClientComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="existingMappingConfigurationTypeComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TypeComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="existingMappingConfigurationSourceContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.SourceContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="false"/>
    </bean>

    <bean id="existingMappingConfigurationTargetContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TargetContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="false"/>
    </bean>

    <bean id="newMappingConfigurationClientComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.ClientComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="newMappingConfigurationTypeComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TypeComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
    </bean>

    <bean id="newMappingConfigurationSourceContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.SourceContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="false"/>
    </bean>

    <bean id="newMappingConfigurationTargetContextComboBox" class="org.ikasan.dashboard.ui.mappingconfiguration.component.TargetContextComboBox" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg value="false"/>
    </bean>

    <bean id="searchButtonClickListener" class="org.ikasan.dashboard.ui.mappingconfiguration.listener.MappingSearchButtonClickListener" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="clientComboBox"/>
        <constructor-arg ref="typeComboBox"/>
        <constructor-arg ref="sourceContextComboBox"/>
        <constructor-arg ref="targetContextComboBox"/>
        <constructor-arg ref="searchResultsTable"/>
        <constructor-arg ref="saveRequiredMonitor"/>
        <constructor-arg ref="adminUserVisibilityGroup"/>
        <constructor-arg ref="systemEventService"/>
        <constructor-arg ref="mappingConfigurationExportHelper"/>
        <constructor-arg ref="platformConfigurationService"/>
    </bean>

    <bean id="searchResultTableItemClickListener" class="org.ikasan.dashboard.ui.mappingconfiguration.listener.MappingSearchResultTableItemClickListener" scope="session">
        <constructor-arg ref="mappingConfigurationService"/>
        <constructor-arg ref="mappingConfigurationConfigurationValuesTable"/>
        <constructor-arg ref="existingMappingConfigurationPanel"/>
        <constructor-arg ref="editMappingConfigurationVisibilityGroup"/>
        <constructor-arg ref="mappingNavigator"/>
    </bean>

    <!-- Components -->

    <bean id="editIcon" class="com.vaadin.server.ThemeResource" scope="session">
        <constructor-arg value="images/edit.png"/>
    </bean>

    <bean id="saveIcon" class="com.vaadin.server.ThemeResource" scope="session">
        <constructor-arg value="images/save.png"/>
    </bean>

    <bean id="addIcon" class="com.vaadin.server.ThemeResource" scope="session">
        <constructor-arg value="images/plus-button.JPG"/>
    </bean>

    <bean id="newMappingConfigurationEditButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="editIcon"/ -->
        <constructor-arg value="Edit"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationEditButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="editIcon"/ -->
        <constructor-arg value="Edit"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationSaveButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="saveIcon"/> -->
        <constructor-arg value="Save"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationSaveButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="saveIcon"/> -->
        <constructor-arg value="Save"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationCancelButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="saveIcon"/> -->
        <constructor-arg value="Cancel"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationCancelButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="saveIcon"/> -->
        <constructor-arg value="Cancel"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationValueNewRecordButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="New"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationValueNewRecordButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="New"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationValueDeleteAllButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Delete all"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationValueDeleteAllButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Delete all"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationValueImportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Import"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationValueImportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Import"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationValueExportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Export"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationExportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Export"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationValueExportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Export"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="existingMappingConfigurationExportButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value="Export"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newClientButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="addIcon"/ -->
        <constructor-arg value=""/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newContextButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="addIcon"/ -->
        <constructor-arg value=""/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newTypeButton" class="com.vaadin.ui.Button" scope="session">
        <!--  property name="icon" ref="addIcon"/ -->
        <constructor-arg value=""/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value=""/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="importMappingConfigurationButton" class="com.vaadin.ui.Button" scope="session">
        <constructor-arg value=""/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newClientLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="New client:"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newContextLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="New context:"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newTypeLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="New type:"/>
        <property name="visible" value="false"/>
    </bean>
    
    <bean id="actionsLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="Actions"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="newMappingConfigurationLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="New mapping configuration:"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="importMappingConfigurationLabel" class="com.vaadin.ui.Label" scope="session">
        <constructor-arg value="Import mapping configuration:"/>
        <property name="visible" value="false"/>
    </bean>

    <bean id="adminUserVisibilityGroup" class="org.ikasan.dashboard.ui.framework.group.VisibilityGroup" scope="session">
        <property name="components" ref="mappingEditVisibilityMap" />
    </bean>
    
    <util:map id="mappingEditVisibilityMap" value-type="java.util.List" key-type="com.vaadin.ui.Component" map-class="java.util.HashMap" scope="session">
	  <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationEditButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationSaveButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationCancelButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationValueNewRecordButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationValueDeleteAllButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationValueImportButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationValueExportButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationExportButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationEditButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationSaveButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationCancelButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueNewRecordButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueDeleteAllButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueImportButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueExportButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationExportButton" />
      <entry value-ref="editMappingSecurity" key-ref="newClientButton" />
      <entry value-ref="editMappingSecurity" key-ref="newContextButton" />
      <entry value-ref="editMappingSecurity" key-ref="newTypeButton" />
      <entry value-ref="editMappingSecurity" key-ref="newClientLabel" />
      <entry value-ref="editMappingSecurity" key-ref="newContextLabel" />
      <entry value-ref="editMappingSecurity" key-ref="newTypeLabel" />
      <entry value-ref="editMappingSecurity" key-ref="actionsLabel" />
      <entry value-ref="editMappingSecurity" key-ref="importMappingConfigurationButton" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationLabel" />
      <entry value-ref="editMappingSecurity" key-ref="importMappingConfigurationLabel" />
      <entry value-ref="editMappingSecurity" key-ref="newMappingConfigurationButton" />
    </util:map>

    <util:constant id="securityMappingWrite" static-field="org.ikasan.dashboard.ui.framework.constants.SecurityConstants.MAPPING_WRITE"/>
    <util:constant id="securityMappingAdmin" static-field="org.ikasan.dashboard.ui.framework.constants.SecurityConstants.MAPPING_ADMIN"/>

    <util:list id="editMappingSecurity">
        <ref bean="securityMappingWrite"/>
        <ref bean="securityMappingAdmin"/>
    </util:list>
    
    <bean id="editMappingConfigurationVisibilityGroup" class="org.ikasan.dashboard.ui.framework.group.VisibilityGroup" scope="session">
        <property name="components" ref="mappingModifyExistingVisibilityMap" />
    </bean>
    
     <util:map id="mappingModifyExistingVisibilityMap" value-type="java.util.List" key-type="com.vaadin.ui.Component" map-class="java.util.HashMap" scope="session">
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationEditButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationSaveButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationCancelButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueNewRecordButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueDeleteAllButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueImportButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationValueExportButton" />
      <entry value-ref="editMappingSecurity" key-ref="existingMappingConfigurationExportButton" />
    </util:map>
    
</beans>