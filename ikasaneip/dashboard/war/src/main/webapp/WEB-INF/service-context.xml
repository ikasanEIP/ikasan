<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<bean id="platformConfigurationService"
		class="org.ikasan.configurationService.service.PlatformConfigurationServiceImpl">
		<constructor-arg ref="configurationService"/>
	</bean>
	
	<bean id="triggerManagementService"
		class="org.ikasan.wiretap.service.TriggerManagementServiceImpl">
		<constructor-arg ref="triggerDao"/>
	</bean>
	
	<bean id="topologyService"
        class="org.ikasan.topology.service.TopologyServiceImpl">
        <constructor-arg ref="topologyDao"/>
    </bean>

	<bean id="topologyDao" class="org.ikasan.topology.dao.HibernateTopologyDao">
		<property name="sessionFactory" ref="ikasanSessionFactory" />
	</bean>

	<bean id="keyLocationQueryProcessorFactory" class="org.ikasan.mapping.keyQueryProcessor.KeyLocationQueryProcessorFactory">
        <constructor-arg ref="mappingConfigurationDao"/>
        <constructor-arg ref="keyLocationProcessorMap"/>
    </bean>
    
    <util:map id="keyLocationProcessorMap">
        <entry key="org.ikasan.mapping.keyQueryProcessor.impl.XPathKeyLocationQueryProcessor" 
            value-ref="xpathKeyLocationQueryProcessor"/>
    </util:map>

    <bean id="xpathKeyLocationQueryProcessor" 
        class="org.ikasan.mapping.keyQueryProcessor.impl.XPathKeyLocationQueryProcessor"/>
    
	 <bean id="ikasan.xads"
                class="org.springframework.jndi.JndiObjectFactoryBean">
     	<property name="jndiName" value="java:/datasource/ikasan/xads" />
     </bean>

    <bean id="ikasan.ds"
            class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="java:/datasource/ikasan/ds" />
    </bean>
    
    <bean id="mappingConfigurationService" class="org.ikasan.mapping.service.MappingConfigurationServiceImpl">
        <constructor-arg ref="mappingConfigurationDao"/>
        <constructor-arg ref="keyLocationQueryProcessorFactory"/>
    </bean>

    <bean id="mappingConfigurationDao" class="org.ikasan.mapping.dao.HibernateMappingConfigurationDao">
        <property name="sessionFactory" ref="ikasanSessionFactory" />
    </bean>
    
    <bean id="ldapService" class="org.ikasan.security.service.LdapServiceImpl">
		<constructor-arg ref="securityDao" />
		<constructor-arg ref="userDao" />
		<constructor-arg ref="sha1PasswordEncoder"/>
	</bean>

	<bean id="authenticationService" class="org.ikasan.security.service.AuthenticationServiceImpl">
		<constructor-arg ref="authenticationProviderFactory" />
		<constructor-arg ref="securityService" />
	</bean>

	<bean id="authenticationProviderFactory" class="org.ikasan.security.service.authentication.AuthenticationProviderFactoryImpl">
		<constructor-arg ref="userService" />
		<constructor-arg ref="securityService" />
	</bean>

	<bean id="securityService" class="org.ikasan.security.service.SecurityServiceImpl">
		<constructor-arg ref="securityDao" />
	</bean>
	
	<bean id="userService"
        class="org.ikasan.security.service.UserServiceImpl">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="authorityDao"/>
        <constructor-arg ref="sha1PasswordEncoder"/>
    </bean>
    
    <bean id="userDao" class="org.ikasan.security.dao.HibernateUserDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>
    
    <bean id="authorityDao" class="org.ikasan.security.dao.HibernateAuthorityDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>

	<bean id="securityDao" class="org.ikasan.security.dao.HibernateSecurityDao">
		<property name="sessionFactory" ref="ikasanSessionFactory" />
	</bean>
	
	<bean id="configurationService"
		class="org.ikasan.configurationService.service.ConfiguredResourceConfigurationService">
		<constructor-arg ref="configurationServiceDao"/>
		<constructor-arg ref="xaConfigurationServiceDao"/>
	</bean>

	<bean id="xaConfigurationServiceDao" class="org.ikasan.configurationService.dao.ConfigurationHibernateImpl">
		<property name="sessionFactory" ref="xaConfigurationServiceSessionFactory"/>
	</bean>

	<bean id="configurationServiceDao" class="org.ikasan.configurationService.dao.ConfigurationHibernateImpl">
		<property name="sessionFactory" ref="ikasanSessionFactory"/>
	</bean>
	
	<bean id="xaConfigurationServiceSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="ikasan.xads" />
		<property name="mappingResources">
			<list>
				<value>org/ikasan/configurationService/model/Configuration.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties" ref="platformHibernateProperties" />
	</bean>
	
	<bean id="wiretapDao"
		class="org.ikasan.wiretap.dao.HibernateWiretapDao">
        <constructor-arg value="true"/>
        <constructor-arg value="1000"/>
		<property name="sessionFactory" ref="ikasanSessionFactory" />
	</bean>

	<bean id="triggerDao"
		class="org.ikasan.trigger.dao.HibernateTriggerDao">
		<property name="sessionFactory" ref="ikasanSessionFactory" />
	</bean>
	
	<bean id="errorReportingService" factory-bean="errorReportingServiceFactory" factory-method="getErrorReportingService" />

    <bean id="errorReportingServiceFactory" class="org.ikasan.error.reporting.service.ErrorReportingServiceFactoryDefaultImpl">
        <constructor-arg ref="ikasanSerialiserFactory"/>
        <constructor-arg ref="errorReportingServiceDao"/>
    </bean>

    <bean id="errorReportingServiceDao" class="org.ikasan.error.reporting.dao.HibernateErrorReportingServiceDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>
    
    <bean id="exclusionManagementService" class="org.ikasan.exclusion.service.ExclusionManagementServiceImpl">
        <constructor-arg ref="exclusionServiceExclusionEventDao"/>
    </bean>

    <bean id="exclusionServiceExclusionEventDao" class="org.ikasan.exclusion.dao.HibernateExclusionEventDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>
    
    <bean id="startupControlService" class="org.ikasan.module.service.StartupControlServiceImpl">
        <constructor-arg ref="systemEventService" />
        <constructor-arg ref="startupControlDao" />
    </bean>
    
    <bean id="startupControlDao"
        class="org.ikasan.module.startup.dao.HibernateStartupControlDao">
        <property name="sessionFactory" ref="moduleStartupControlHibernateSessionFactory" />
    </bean>
    
    <bean id="systemEventService" class="org.ikasan.systemevent.service.SystemEventServiceImpl">
        <constructor-arg ref="systemEventDao" />
        <constructor-arg value="10080" /> <!-- system events expire after 1 week -->
    </bean>
    
    <bean id="systemEventDao"
        class="org.ikasan.systemevent.dao.HibernateSystemEventDao">
        <property name="sessionFactory" ref="systemEventHibernateSessionFactory" />
        <constructor-arg value="true"/>
        <constructor-arg value="100"/>
    </bean>
    
    <bean id="errorCategorisationService" class="org.ikasan.error.reporting.service.ErrorCategorisationServiceImpl">
        <constructor-arg ref="errorCategorisationDao"/>
        <constructor-arg ref="errorReportingServiceDao"/>
    </bean>

	<bean id="errorCategorisationDao" class="org.ikasan.error.reporting.dao.HibernateErrorCategorisationDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>
    
    <bean id="errorReportingManagementService" class="org.ikasan.error.reporting.service.ErrorReportingManagementServiceImpl">
        <constructor-arg ref="errorManagementDao"/>
        <constructor-arg ref="errorReportingServiceDao"/>
    </bean>
    
    <bean id="errorManagementDao" class="org.ikasan.error.reporting.dao.HibernateErrorManagementDao">
        <property name="sessionFactory" ref="ikasanSessionFactory"/>
    </bean>

    <bean id="ikasanSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="ikasan.ds" />
        <property name="mappingResources">
           <list>
               <value>/org/ikasan/mapping/model/ConfigurationContext.hbm.xml</value>
               <value>/org/ikasan/mapping/model/MappingConfiguration.hbm.xml</value>
               <value>/org/ikasan/mapping/model/MappingConfigurationLite.hbm.xml</value>
               <value>/org/ikasan/mapping/model/ConfigurationServiceClient.hbm.xml</value>
               <value>/org/ikasan/mapping/model/ConfigurationType.hbm.xml</value>
               <value>/org/ikasan/mapping/model/KeyLocationQuery.hbm.xml</value>
               <value>/org/ikasan/mapping/model/SourceConfigurationValue.hbm.xml</value>
               <value>/org/ikasan/mapping/model/TargetConfigurationValue.hbm.xml</value>
               <value>/org/ikasan/mapping/model/SourceConfigurationGroupSequence.hbm.xml</value>
               <value>/org/ikasan/security/model/Principal.hbm.xml</value>
			   <value>/org/ikasan/security/model/Role.hbm.xml</value>
			   <value>/org/ikasan/security/model/Policy.hbm.xml</value>
			   <value>/org/ikasan/security/model/User.hbm.xml</value>
			   <value>/org/ikasan/security/model/UserPrincipal.hbm.xml</value>
			   <value>/org/ikasan/security/model/Authority.hbm.xml</value>
			   <value>/org/ikasan/security/model/AuthenticationMethod.hbm.xml</value>
			   <value>/org/ikasan/security/model/PolicyLink.hbm.xml</value>
			   <value>/org/ikasan/security/model/PolicyLinkType.hbm.xml</value>
			   <value>/org/ikasan/topology/model/BusinessStream.hbm.xml</value>
			   <value>/org/ikasan/topology/model/BusinessStreamFlow.hbm.xml</value>
			   <value>/org/ikasan/topology/model/Component.hbm.xml</value>
			   <value>/org/ikasan/topology/model/Flow.hbm.xml</value>
			   <value>/org/ikasan/topology/model/Module.hbm.xml</value>
			   <value>/org/ikasan/topology/model/Server.hbm.xml</value>
			   <value>/org/ikasan/topology/model/UserBusinessStream.hbm.xml</value>
			   <value>org/ikasan/configurationService/model/Configuration.hbm.xml</value>
			   <value>org/ikasan/wiretap/model/WiretapEventImpl.hbm.xml</value>
			   <value>org/ikasan/trigger/model/Trigger.hbm.xml</value>
			   <value>org/ikasan/error/reporting/model/ErrorOccurrence.hbm.xml</value>
			   <value>org/ikasan/exclusion/model/ExclusionEvent.hbm.xml</value>
			   <value>org/ikasan/systemevent/model/SystemEvent.hbm.xml</value>
			   <value>org/ikasan/error/reporting/model/ErrorCategorisation.hbm.xml</value>
			   <value>org/ikasan/error/reporting/model/ErrorCategorisationLink.hbm.xml</value>
			   <value>org/ikasan/module/startup/StartupControl.hbm.xml</value>
			   <value>org/ikasan/error/reporting/model/ErrorOccurrenceAction.hbm.xml</value>
               <value>org/ikasan/error/reporting/model/Link.hbm.xml</value>
               <value>org/ikasan/error/reporting/model/Note.hbm.xml</value>
               <value>org/ikasan/error/reporting/model/ErrorOccurrenceLink.hbm.xml</value>
               <value>org/ikasan/error/reporting/model/ErrorOccurrenceNote.hbm.xml</value>
           </list>
        </property>
        <property name="hibernateProperties" ref="platformHibernateProperties"/>
    </bean>
    
    <bean id="sha1PasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>

</beans>