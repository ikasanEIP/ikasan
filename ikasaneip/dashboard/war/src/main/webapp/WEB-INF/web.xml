<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    id="WebApp_ID" version="3.0">
    <display-name>Ikasan Dashboard</display-name>

    <!-- Spring -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/root-context.xml, 
        			 /WEB-INF/error-context.xml, 
        			 /WEB-INF/profile-context.xml, 
        			 /WEB-INF/replay-context.xml,  
        			 /WEB-INF/mapping-context.xml, 
        			 /WEB-INF/dashboard-context.xml, 
        			 /WEB-INF/hospital-context.xml, 
        			 /WEB-INF/persistence-setup-context.xml,
        			 /WEB-INF/transaction-context.xml,
        			 /WEB-INF/administration-context.xml,
        			 /WEB-INF/policy-context.xml,
        			 /WEB-INF/service-context.xml,
        			 /WEB-INF/topology-context.xml, 
        			 /WEB-INF/monitor-context.xml, 
        			 classpath:platform-service-conf.xml, 
        			 classpath:serialiser-service-conf.xml, 
        			 classpath:systemevent-service-conf.xml, 
        			 classpath:providers-conf.xml,
        			 classpath:hospital-conf.xml,
        			 classpath:module-service-conf.xml
        </param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.xml</param-value>
    </context-param>
    <filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.ikasan.dashboard.ui.framework.web.AmsOpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>ikasanSessionFactory</param-value>
        </init-param>
        <init-param>
          <param-name>singleSession</param-name>
          <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>MANUAL</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Vaadin servlet -->
    <servlet>
        <servlet-name>Ikasan Dashboard</servlet-name>
        <servlet-class>ru.xpoft.vaadin.SpringVaadinServlet</servlet-class>
        <init-param>
            <param-name>beanName</param-name>
            <param-value>ikasanUI</param-value>
        </init-param>
        <init-param>
            <param-name>systemMessagesBeanName</param-name>
            <param-value>DEFAULT</param-value>
        </init-param>
        <init-param>
		    <param-name>widgetset</param-name>
		    <param-value>org.ikasan.dashboard.ui.AppWidgetSet</param-value>
		</init-param>
		<init-param>
	      <param-name>closeIdleSessions</param-name>
	      <param-value>true</param-value>
	    </init-param> 
	    <init-param>
	      <param-name>legacyPropertyToString</param-name>
	      <param-value>true</param-value>
	    </init-param>
	    <!-- init-param>
		   <param-name>org.atmosphere.useWebSocketAndServlet3</param-name>
		   <param-value>true</param-value>
		</init-param>
		<init-param>
		   <param-name>org.atmosphere.cpr.asyncSupport</param-name>
		   <param-value>org.atmosphere.container.Servlet30CometSupport</param-value>
		</init-param -->
        <async-supported>true</async-supported>
    </servlet>
    
    <servlet>
		<servlet-name>jersey-servlet</servlet-name>
		<servlet-class>
			org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>org.ikasan.dashboard.ui.monitor.rest</param-value>
		</init-param>
		<init-param>
		    <param-name>jersey.config.server.provider.scanning.recursive</param-name>
		    <param-value>false</param-value>
		</init-param>
        <init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
 
	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>Ikasan Dashboard</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Ikasan Dashboard</servlet-name>
        <url-pattern>/VAADIN/*</url-pattern>
    </servlet-mapping> 
	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

    <context-param>
        <description>Vaadin production mode</description>
        <param-name>productionMode</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Static mapping -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/static/*</url-pattern>
    </servlet-mapping>

	<context-param>
	  <param-name>heartbeatInterval</param-name>
	  <param-value>300</param-value>
	</context-param>
	
	<context-param>
	    <param-name>resteasy.scan</param-name>
	    <param-value>false</param-value>
	</context-param>
	<context-param>
	    <param-name>resteasy.scan.providers</param-name>
	    <param-value>false</param-value>
	</context-param>
	<context-param>
	    <param-name>resteasy.scan.resources</param-name>
	    <param-value>false</param-value>
	</context-param>

    <session-config>
        <session-timeout>100</session-timeout>
    </session-config>
    
    <listener>
          <listener-class>org.ikasan.dashboard.ui.WebAppStartStopListener</listener-class>
     </listener>

</web-app>