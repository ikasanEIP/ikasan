<?xml version="1.0" encoding="UTF-8"?>
<!-- 
# //
# // ====================================================================
# // Ikasan Enterprise Integration Platform
# // 
# // Distributed under the Modified BSD License.
# // Copyright notice: The copyright for this software and a full listing 
# // of individual contributors are as shown in the packaged copyright.txt 
# // file. 
# // 
# // All rights reserved.
# //
# // Redistribution and use in source and binary forms, with or without 
# // modification, are permitted provided that the following conditions are met:
# //
# //  - Redistributions of source code must retain the above copyright notice, 
# //    this list of conditions and the following disclaimer.
# //
# //  - Redistributions in binary form must reproduce the above copyright notice, 
# //    this list of conditions and the following disclaimer in the documentation 
# //    and/or other materials provided with the distribution.
# //
# //  - Neither the name of the ORGANIZATION nor the names of its contributors may
# //    be used to endorse or promote products derived from this software without 
# //    specific prior written permission.
# //
# // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
# // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
# // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
# // USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# // ====================================================================
# //
# //
# // 
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    
    <bean id="module"
        class="org.ikasan.framework.module.SimpleModule">
        <constructor-arg value="demoFileDelivery-${module.name}" />
        <constructor-arg>
            <list>
            	<ref bean="channelAdapterFlowInitiator"/>
            </list>
        </constructor-arg>
        <property name="description">
            <value>This is an example of an ftp source module that picks up newly discovered files from an ftp server </value>
        </property>
    </bean>



  <!-- =========================================================================== -->
  <!--                   Channel Adapter Flow Initiator                            -->
  <!-- =========================================================================== -->


  <bean id="channelAdapterFlowInitiator"
    class="org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator">
    <!-- initiator name -->
    <constructor-arg value="channelAdapterFlowInitiator"/>
    <!-- module name -->
    <constructor-arg value="demoFileDelivery-${module.name}"/>
    <!-- event provider -->
    <constructor-arg ref="ftpEventProvider"/>
    <!-- flow to invoke -->
    <constructor-arg ref="channelAdapterFlow"/>
    <!-- initiator exception handler -->
    <!-- <constructor-arg ref="exceptionHandler" /> -->
    <!-- <constructor-arg><null/></constructor-arg>-->
    <constructor-arg>
        <bean class="org.ikasan.framework.component.LoggingExceptionHandlerImpl"/>
    </constructor-arg>
     <property name="triggers">
	    <list>
	       <bean class="org.quartz.CronTrigger">
	           <property name="name" value="every10SecondsTrigger" />
	           <property name="cronExpression" value="0/10 * * * * ?" />
	       </bean>
	       <bean class="org.quartz.CronTrigger">
               <property name="name" value="every7SecondsTrigger" />
               <property name="cronExpression" value="0/7 * * * * ?" />
           </bean>
	    </list>
     </property>
    <property name="scheduler" ref="channelAdapterFlowScheduler"/>
    </bean>

  <bean id="channelAdapterFlowScheduler"
    class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
      <property name="schedulerName" value="channelAdapterFlowScheduler"/>
      <property name="jobFactory" ref="channelAdapterFlowJobFactory"/>
  </bean>

  <bean id="channelAdapterFlowJobFactory"
    class="org.ikasan.framework.initiator.scheduled.quartz.IkasanJobFactory">
     <constructor-arg ref="channelAdapterFlowInitiator"/>
  </bean>
  
    <!-- transaction configuration for InvocationDrivenInitiators -->
    <aop:config>
        <aop:pointcut id="initiatorInvocation" expression="execution(* org.ikasan.framework.initiator.InvocationDrivenInitiator.invoke(..))" />
        <aop:advisor advice-ref="requiresNew-TransactionAdvice" pointcut-ref="initiatorInvocation" />
    </aop:config>

</beans>