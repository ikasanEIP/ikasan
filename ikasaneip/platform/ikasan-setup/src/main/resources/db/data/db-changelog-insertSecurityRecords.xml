<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	$Id$ 
	$URL$ 
	==================================================================== 
	Ikasan Enterprise Integration Platform Distributed under the Modified BSD 
	License. Copyright notice: The copyright for this software and a full listing 
	of individual contributors are as shown in the packaged copyright.txt file. 
	All rights reserved. Redistribution and use in source and binary forms, with 
	or without modification, are permitted provided that the following conditions 
	are met: - Redistributions of source code must retain the above copyright 
	notice, this list of conditions and the following disclaimer. - Redistributions 
	in binary form must reproduce the above copyright notice, this list of conditions 
	and the following disclaimer in the documentation and/or other materials 
	provided with the distribution. - Neither the name of the ORGANIZATION nor 
	the names of its contributors may be used to endorse or promote products 
	derived from this software without specific prior written permission. THIS 
	SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
	IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY 
	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF 
	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
	==================================================================== 
	Author: Ikasan Development Team 
-->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

	<changeSet author="ikasan dev" id="insertSecurityRecords" context="baseline">
	
		<preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from SecurityPrincipal</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from SecurityRole</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from SecurityPolicy</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from PolicyLinkType</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from UserPrincipal</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from PrincipalRole</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from RolePolicy</sqlCheck>
        </preConditions>

		<insert tableName="SecurityPrincipal">
			<column name="Name" value="admin" />
			<column name="PrincipalType" value="user" />
			<column name="Description" value="The administrator user" />
		</insert>
		
		<insert tableName="SecurityRole">
			<column name="Name" value="ADMIN" />
			<column name="Description" value="Users who may perform administration functions on the system" />
		</insert>
		
		<insert tableName="SecurityRole">
			<column name="Name" value="User" />
			<column name="Description" value="Users who have a read only view on the system" />
		</insert>
		
		<insert tableName="SecurityRole">
			<column name="Name" value="COP Stream Administrator" />
			<column name="Description" value="Cash Operations Stream Administrators" />
		</insert>

		<insert tableName="SecurityPolicy">
			<column name="Name" value="ALL" />
			<column name="Description" value="Policy to do everything" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="Read Only" />
			<column name="Description" value="Read only policy" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewBusinessStream" />
			<column name="Description" value="Ability to view business streams" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewWiretap" />
			<column name="Description" value="Ability to view wiretaps" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewExclusion" />
			<column name="Description" value="Ability to view exclusions" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewActionedExclusions" />
			<column name="Description" value="Ability to view actioned exclusions" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewErrors" />
			<column name="Description" value="Ability to view errors" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewCategorisedErrors" />
			<column name="Description" value="Ability to view categorised errors" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ActionExclusion" />
			<column name="Description" value="Ability to action exclusions" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="CreateBusinessStream" />
			<column name="Description" value="Ability to create a business stream" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ModifyBusinessStream" />
			<column name="Description" value="Ability to modify a business stream" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="DeleteBusinessStream" />
			<column name="Description" value="Ability to delete a business stream" />
		</insert>	
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewTopology" />
			<column name="Description" value="Ability to view the topology tab" />
		</insert>	
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewMapping" />
			<column name="Description" value="Ability to view the mapping tab" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ViewMonitoring" />
			<column name="Description" value="Ability to view the monitoring tab" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="EditMapping" />
			<column name="Description" value="Ability to edit a mapping" />
		</insert>
		
		<insert tableName="SecurityPolicy">
			<column name="Name" value="ModifyExistingMapping" />
			<column name="Description" value="Ability to modify an existing mapping" />
		</insert>		
		
		<insert tableName="PolicyLinkType">
			<column name="Name" value="Mapping Configuration" />
			<column name="TableName" value="MCSMappingConfiguration" />
		</insert>
		
		<insert tableName="PolicyLinkType">
			<column name="Name" value="Module" />
			<column name="TableName" value="IkasanModule" />
		</insert>
		
		<insert tableName="PolicyLinkType">
			<column name="Name" value="Flow" />
			<column name="TableName" value="Flow" />
		</insert>
		
		<insert tableName="PolicyLinkType">
			<column name="Name" value="Business Stream" />
			<column name="TableName" value="BusinessStream" />
		</insert>
		

		<sql>			 
			 INSERT
			 INTO UserPrincipal ( UserId, PrincipalId )
			 (SELECT u.Id, s.Id
			  FROM Users u, SecurityPrincipal s
			  WHERE
			  	   u.Username = 'admin'
			  	   and s.Name = 'admin'
			  )
		</sql>
		
		<sql>			 
			 INSERT INTO PrincipalRole ( PrincipalId, RoleId )
			 (SELECT s.Id, r.Id 
			 FROM 
			 	SecurityPrincipal s, SecurityRole r 
			 WHERE 
			 	s.Name = 'admin' 
			 	and r.Name = 'ADMIN'
			 )
		</sql>
		
		<sql>			 
			 INSERT INTO PrincipalRole ( PrincipalId, RoleId )
			 (SELECT s.Id, r.Id 
			 FROM 
			 	SecurityPrincipal s, SecurityRole r 
			 WHERE 
			 	s.Name = 'User' 
			 	and r.Name = 'Read Only'
			 )
		</sql>
		
		<sql>			 
			 INSERT INTO RolePolicy ( RoleId, PolicyId )
			 (SELECT r.Id, p.Id 
			 FROM 
			 	SecurityRole r , SecurityPolicy p 
			 WHERE 
			 	r.Name = 'ADMIN' 
			 	and p.Name = 'ALL'
			 )
		</sql>
		
		<sql>			 
			 INSERT INTO RolePolicy ( RoleId, PolicyId )
			 (SELECT r.Id, p.Id 
			 FROM 
			 	SecurityRole r , SecurityPolicy p 
			 WHERE 
			 	r.Name = 'User' 
			 	and p.Name = 'Read Only'
			 )
		</sql>
		
	</changeSet>

</databaseChangeLog>